@page "/demo/dialog"
@using CorUI
@using CorUI.Services

<div class="demo-container">
    <h1 class="demo-title">Dialog (Service-driven)</h1>
    <p class="demo-description">Dialogs are opened via <code>IWindowService.OpenDialog</code>. On web, set <code>ComponentType</code> to render a component; on macOS, <code>ContentPath</code> is used for the WebView.</p>

    <div class="demo-section">
        <h4 class="demo-section-title">Open component as dialog</h4>
        <div class="demo-content">
            <button @onclick="OpenDialog">Open Dialog (service)</button>
        </div>
        <CodeBlock>
@("await WindowService.OpenDialog(new Dialog {\n    ComponentType = typeof(TestApp.Pages.ShowcaseDialog),\n    Title = \"Service Dialog\",\n    Width = 640, Height = 480,\n    BackdropDismissable = true, DismissWithEscape = true,\n    ContentPath = \"/showcase/dialog\" // for macOS\n});")
        </CodeBlock>
    </div>
</div>

@code {
    [Inject] private IWindowService WindowService { get; set; } = null!;

    private async Task OpenDialog()
    {
        await WindowService.OpenDialog(new Dialog
        {
            ComponentType = typeof(TestApp.Pages.ShowcaseDialog),
            Title = "Service Dialog",
            Width = 640,
            Height = 480,
            BackdropDismissable = true,
            DismissWithEscape = true,
            ContentPath = "/showcase/dialog"
        });
    }
}
